// ***** 0. Documentation Section *****
// TableTrafficLight.c for Lab 10
// Runs on LM4F120/TM4C123
// Index implementation of a Moore finite state machine to operate a traffic light.  
// Daniel Valvano, Jonathan Valvano
// January 15, 2016

// east/west red light connected to PB5
// east/west yellow light connected to PB4
// east/west green light connected to PB3
// north/south facing red light connected to PB2
// north/south facing yellow light connected to PB1
// north/south facing green light connected to PB0
// pedestrian detector connected to PE2 (1=pedestrian present)
// north/south car detector connected to PE1 (1=car present)
// east/west car detector connected to PE0 (1=car present)
// "walk" light connected to PF3 (built-in green LED)
// "don't walk" light connected to PF1 (built-in red LED)

// ***** 1. Pre-processor Directives Section *****
#include "TExaS.h"
#include "tm4c123gh6pm.h"

// port B >> leds
// port F >> walk
// Port E >> sensors

// east facing red light connected to PB5
// east facing yellow light connected to PB4
// east facing green light connected to PB3
// north facing red light connected to PB2
// north facing yellow light connected to PB1
// north facing green light connected to PB0

// south facing car detector connected to PE1 (1=car present)
// west facing car detector connected to PE0 (1=car present)

// port B leds
#define LIGHT                   (*((volatile unsigned long *)0x400050FC))
/*#define GPIO_PORTB_OUT          (*((volatile unsigned long *)0x400050FC)) // bits 5-0
#define GPIO_PORTB_DIR_R        (*((volatile unsigned long *)0x40005400))
#define GPIO_PORTB_AFSEL_R      (*((volatile unsigned long *)0x40005420))
#define GPIO_PORTB_DEN_R        (*((volatile unsigned long *)0x4000551C))
#define GPIO_PORTB_AMSEL_R      (*((volatile unsigned long *)0x40005528))
#define GPIO_PORTB_PCTL_R       (*((volatile unsigned long *)0x4000552C))*/
	
// port E 
//#define GPIO_PORTE_IN           (*((volatile unsigned long *)0x4002401C)) // bits 1-0
// 3sensors
#define SENSOR                  (*((volatile unsigned long *)0x4002401C))
/*#define GPIO_PORTE_DIR_R        (*((volatile unsigned long *)0x40024400))
#define GPIO_PORTE_AFSEL_R      (*((volatile unsigned long *)0x40024420))
#define GPIO_PORTE_DEN_R        (*((volatile unsigned long *)0x4002451C))
#define GPIO_PORTE_AMSEL_R      (*((volatile unsigned long *)0x40024528))
#define GPIO_PORTE_PCTL_R       (*((volatile unsigned long *)0x4002452C))*/
	
//F
#define Walk                   (*((volatile unsigned long *)0x40025028)) 

	
#define SYSCTL_RCGC2_R          (*((volatile unsigned long *)0x400FE108))
#define SYSCTL_RCGC2_GPIOE      0x00000010  // port E Clock Gating Control
#define SYSCTL_RCGC2_GPIOB      0x00000002  // port B Clock Gating Control


struct State 
	{
		unsigned long Out; 
		unsigned long Time;  
		unsigned long Next[8];
	}; 
typedef const struct State STyp;
	
	
#define goW   0
#define waitW 1
#define goS   2
#define waitS 3
#define walk   4
#define dontWalk 5
#define walkOff   6
#define dontWalkT 7
#define walkOffT   8

STyp FSM[9] = {
 {0x21,3000,{goW,waitW,waitW,waitW,goW,waitW,waitW,waitW}}, 
 {0x22, 500,{goS,walk,goS,goS,waitW,walk,goS,goS}},
 {0x0C,3000,{goS,waitS,goS,waitS,waitS,waitS,waitS,waitS}},
 {0x14, 500,{goW,walk,waitS,walk,goW,goW,goW,walk}},
 
{0x21,3000,{walk,walk,dontWalk,dontWalk,dontWalk,dontWalk,dontWalk,dontWalk}}, 
 {0x22, 500,{walkOff,walkOff,walkOff,walkOff,walkOff,walkOff,walkOff,walkOff}},
 {0x0C,3000,{dontWalkT,dontWalkT,dontWalkT,dontWalkT,dontWalkT,dontWalkT,dontWalkT,dontWalkT}},
 {0x14, 500,{walkOffT,walkOffT,goS,goS,goW,goW,goW,goW}}

};


// ***** 2. Global Declarations Section *****

// FUNCTION PROTOTYPES: Each subroutine defined
void DisableInterrupts(void); // Disable interrupts
void EnableInterrupts(void);  // Enable interrupts

// ***** 3. Subroutines Section *****
unsigned long S;  // index to the current state 
unsigned long Input; 

int main(void)
{
	TExaS_Init(SW_PIN_PE210, LED_PIN_PB543210,ScopeOff); // activate grader and set system clock to 80 MHz
	
	volatile unsigned long delay;
	SYSCTL_RCGC2_R |= 0x12;      			// 1) B E
  delay = SYSCTL_RCGC2_R;      			// 2) no need to unlock
	
  GPIO_PORTE_AMSEL_R &= ~0x03; 			// 3) disable analog function on PE1-0
  GPIO_PORTE_PCTL_R &= ~0x000000FF; // 4) enable regular GPIO
  GPIO_PORTE_DIR_R &= ~0x03;   			// 5) inputs on PE1-0
  GPIO_PORTE_AFSEL_R &= ~0x03; 			// 6) regular function on PE1-0
  GPIO_PORTE_DEN_R |= 0x03;    			// 7) enable digital on PE1-0
	
  GPIO_PORTB_AMSEL_R &= ~0x3F; 			// 3) disable analog function on PB5-0
  GPIO_PORTB_PCTL_R &= ~0x00FFFFFF; // 4) enable regular GPIO
  GPIO_PORTB_DIR_R |= 0x3F;    			// 5) outputs on PB5-0
  GPIO_PORTB_AFSEL_R &= ~0x3F; 			// 6) regular function on PB5-0
  GPIO_PORTB_DEN_R |= 0x3F;    			// 7) enable digital on PB5-0
	
  S = goN;   
  
  EnableInterrupts();
  while(1)
	{
    
  }
}

